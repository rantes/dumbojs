
describe('dmbButton Directive', () => {
    let element = null;
    let container = null;
    
    container = document.querySelector('#components');
    element = document.createElement('dmb-button');
    element.classList.add('button');
    element.classList.add('button-primary');
    container.append(element);

    afterEach( done => {
        element && element.remove();
        done();
    });

    it('Should render element', (done) => {
        expect(element).toBeDefined();
        done();
    });

});
describe('DmbForm Directive', () => {
    let element = null;
    let select = null;
    let button = null;
    let inputs = null;
    let textarea = null;
    let container = null;

    let input = null;

    element = document.createElement('dmb-form');
    select = document.createElement('dmb-select');
    button = document.createElement('dmb-button');
    inputs = document.createElement('dmb-input');
    textarea = document.createElement('dmb-text-area');
    container = document.querySelector('#components');
    
    container.append(element);

    select.setAttribute('validate', 'required');
    inputs.setAttribute('validate', 'required');
    textarea.setAttribute('validate', 'required');
    button.classList.add('button');
    button.classList.add('button-primary');
    button.innerHTML = 'TestForm';


    inputs.setAttribute('label', 'label');
    element.append(inputs);
    element.append(select);
    element.append(textarea);
    
    button.setAttribute('type','submit');
    element.append(button);
    
    
    select.setAttribute('values', true);
    select.value = null;

    select.values = [
        {value: '', text: 'Seleccione', selected: true},
        {value: '1', text: 'Laboral'},
        {value: '2', text: 'Pension'},
        {value: '3', text: 'Accidente'}
    ];

    afterEach( done => {
        element && element.remove();
        done();
    });

    beforeEach((done) => {
        inputs.value = '';
        select.value = null;
        input = inputs.querySelector('input');
        done();
    });

    it('Should render element', (done) => {
        expect(element).toBeDefined();
        done();
    });
    
    it('Should validate', (done) => {
        element.submit();
        expect(element.valids).toBe(0);
        done();
    });

    it('Should have valid inputs', (done) => {
        inputs.value = 'value';
        element.submit();
        expect(element.valids).toBe(1);
        done();
    });
});
describe('DmbImageUploader Directive', () => {
    let element = null;
    // eslint-disable-next-line no-unused-vars
    let loadFile = null; // this var is actually used for spy purposes
    let container = null;

    const contentType = 'image/png';
    const img1px = 'iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==';

    element = document.createElement('dmb-image-uploader');
    container = document.querySelector('#components');
    container.append(element);

    const dataURLtoFile = (b64Data, contentType='', sliceSize=512) => {
        const byteCharacters = atob(b64Data);
        const byteArrays = [];
    
        for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {
            const slice = byteCharacters.slice(offset, offset + sliceSize);
        
            const byteNumbers = new Array(slice.length);
            for (let i = 0; i < slice.length; i++) {
                byteNumbers[i] = slice.charCodeAt(i);
            }
        
            const byteArray = new Uint8Array(byteNumbers);
            byteArrays.push(byteArray);
        }
        const blob = new Blob(byteArrays, {type: contentType});
        return blob;
    };
  
    const imgFile = dataURLtoFile(img1px, contentType);

    afterEach( done => {
        element && element.remove();
        done();
    });

    it('Should render element', (done) => {
        expect(element).toBeDefined();
        done();
    });

    loadFile = function(target) {
        console.log(`trying to send data to ${target}`);
    };

    it('Should check if element was render', (done) => {
        spyOn(element, 'loadFile');
        element.querySelector('input[type="file"]').dispatchEvent(new Event('change'));
        expect(element.loadFile).toHaveBeenCalled();
        done();
    });

    it('Should load the image in content preview', (done) => {
        const previewimg = element.querySelector('.preview img');
        previewimg.src = '';
        element.loadFile(imgFile).then(() => {
            expect(previewimg.getAttribute('src')).toBe(`data:image/png;base64,${img1px}`);
            done();
        });
    });
});

describe('DmbInput Directive', () => {
    let element = null;
    let input = null;
    let container = null;
    
    element = document.createElement('dmb-input');
    container = document.querySelector('#components');
    element.setAttribute('label', 'label');
    container.append(element);
    
    afterEach( done => {
        element && element.remove();
        done();
    });
    
    beforeAll((done) => {
        input = element.querySelector('input');
        done();
    });
    
    it('Should render element', (done) => {
        expect(element).toBeDefined();
        done();
    });

    it('Should have label', (done) => {
        const label = element.querySelector('label');
        expect(label).toBeDefined();
        done();
    });

    it('Should have input text', (done) => {
        expect(input).toBeDefined();
        done();
    });

    it('Should validate required', (done) => {
        element.setAttribute('validate', 'required');
        input.value = null;
        input.dispatchEvent(new Event('focusin'));
        input.dispatchEvent(new Event('blur'));
        expect(input.hasAttribute('valid')).toBe(false);
        input.value = 'a value';
        input.dispatchEvent(new Event('focusin'));
        input.dispatchEvent(new Event('blur'));
        expect(input.hasAttribute('valid')).toBe(true);
        done();
    });

    it('Should validate email', (done) => {
        element.setAttribute('validate', 'email');
        input.value = 'anything but email address';
        input.dispatchEvent(new Event('focusin'));
        input.dispatchEvent(new Event('blur'));
        expect(input.hasAttribute('valid')).toBe(false);
        done();
    });
});

describe('DmbSelect Directive', () => {
    let element = null;
    let input = null;
    let container = null;
    
    element = document.createElement('dmb-select');
    container = document.querySelector('#components');
    element.setAttribute('label', 'label');
    container.append(element);

    element.setAttribute('values', true);
    element.value = null;

    element.values = [
        {value: '', text: 'Seleccione', selected: true},
        {value: '1', text: 'Laboral'},
        {value: '2', text: 'Pension'},
        {value: '3', text: 'Accidente'}
    ];

    afterEach( done => {
        element && element.remove();
        done();
    });

    beforeAll((done) => {
        input = element.querySelector('select');
        done();
    });
    
    it('Should render element', (done) => {
        expect(element).toBeDefined();
        done();
    });

    it('Should have label', (done) => {
        const label = element.querySelector('label');
        expect(label).toBeDefined();
        done();
    });

    it('Should have select', (done) => {
        expect(input).toBeDefined();
        done();
    });

    it('Should validate required', (done) => {
        element.setAttribute('validate', 'required');
        element.value = '';
        input.dispatchEvent(new Event('focusin'));
        input.dispatchEvent(new Event('blur'));
        expect(input.hasAttribute('valid')).toBe(false);
        element.value = '1';
        input.dispatchEvent(new Event('focusin'));
        input.dispatchEvent(new Event('blur'));
        expect(input.hasAttribute('valid')).toBe(true);
        done();
    });
});
describe('DmbVideoUploader Directive', () => {
    let element = null;
    // eslint-disable-next-line no-unused-vars
    let loadFile = null; // this var is actually used for spy purposes
    let container = null;

    const contentType = 'video/ogg';
    const vid1sec = '';

    element = document.createElement('dmb-video-uploader');
    container = document.querySelector('#components');
    element.setAttribute('preview', true);
    container.append(element);

    const dataURLtoFile = (b64Data, contentType='', sliceSize=512) => {
        const byteCharacters = atob(b64Data);
        const byteArrays = [];
        let blob = null;
        let slice = null;
        let byteNumbers = null;
        let byteArray = null;
    
        for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {
            slice = byteCharacters.slice(offset, offset + sliceSize);
        
            byteNumbers = new Array(slice.length);
            for (let i = 0; i < slice.length; i++) {
                byteNumbers[i] = slice.charCodeAt(i);
            }
        
            byteArray = new Uint8Array(byteNumbers);
            byteArrays.push(byteArray);
        }

        blob = new Blob(byteArrays, {type: contentType});
        return blob;
    };
  
    const imgFile = dataURLtoFile(vid1sec, contentType);
    let previewvideo = null;

    afterEach( done => {
        element && element.remove();
        done();
    });
    
    beforeAll((done) => {
        previewvideo = element.querySelector('.preview video');
        done();
    });

    it('Should render element', (done) => {
        expect(element).toBeDefined();
        done();
    });

    loadFile = function(target) {
        console.log(`trying to send data to ${target}`);
    };

    it('Should check if video was previewed', (done) => {
        spyOn(element, 'loadFile');
        element.querySelector('input[type="file"]').dispatchEvent(new Event('change'));
        expect(element.loadFile).toHaveBeenCalled();
        done();
    });

    it('Should load the image in content preview', (done) => {
        previewvideo.src = '';
        element.loadFile(imgFile).then(() => {
            expect(previewvideo.getAttribute('src')).toBe(`data:video/ogg;base64,${vid1sec}`);
            done();
        });
    });
});

describe('dmbWYSIWYG Directive', () => {
    let element = null;
    let textarea = null;
    let editarea = null;
    let container = null;

    element = document.createElement('dmb-wysiwyg');
    container = document.querySelector('#components');
    container.append(element);

    afterEach( done => {
        element && element.remove();
        done();
    });

    beforeAll((done) => {
        textarea = element.querySelector('textarea.dmb-wysiwyg__content-content');
        editarea = element.querySelector('section.dmb-wysiwyg__content-content');
        done();
    });

    beforeEach(() => {
        textarea.value = '';
        editarea.innerHTML = '';
    });

    it('Should render element', (done) => {
        expect(element).toBeDefined();
        done();
    });

    it('Should check fields if have data', (done) => {
        element.setAttribute('validate', 'required');
        textarea.value = 'prueba';
        editarea.innerHTML = 'prueba';
        editarea.dispatchEvent(new Event('focusin'));
        editarea.dispatchEvent(new Event('blur'));
        const errMsg = element.querySelector('span.error-container').innerHTML;
        expect(errMsg).toBe('');
        done();
    });

    it('Should sync data from textarea to editarea', (done) => {
        editarea.setAttribute('hidden', true);
        textarea.removeAttribute('hidden');
        editarea.innerHTML = '';
        textarea.value = 'texto';
        element.syncData();
        expect(editarea.innerHTML).toBe('texto');
        done();
    });

    it('Should sync data from editarea to textarea', (done) => {
        textarea.setAttribute('hidden', true);
        editarea.removeAttribute('hidden');
        textarea.value = '';
        editarea.innerHTML = 'texto';
        element.syncData();
        expect(textarea.value).toBe('texto');
        done();
    });

    it('Should validate required in textarea', (done) => {
        element.setAttribute('validate', 'required');
        editarea.setAttribute('hidden',true);
        textarea.removeAttribute('hidden');
        textarea.value = null;
        textarea.dispatchEvent(new Event('focusin'));
        textarea.dispatchEvent(new Event('blur'));
        const errMsg = element.querySelector('span.error-container').innerHTML;
        expect(errMsg).toBe('Este campo es obligatorio');
        done();
    });

    it('Should validate required in editarea', (done) => {
        element.setAttribute('validate', 'required');
        textarea.setAttribute('hidden',true);
        editarea.removeAttribute('hidden');
        editarea.innerHTML = '';
        editarea.dispatchEvent(new Event('focusin'));
        editarea.dispatchEvent(new Event('blur'));
        const errMsg = element.querySelector('span.error-container').innerHTML;
        expect(errMsg).toBe('Este campo es obligatorio');
        done();
    });
});
